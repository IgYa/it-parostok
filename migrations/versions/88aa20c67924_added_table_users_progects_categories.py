"""added_table_users_progects_categories

Revision ID: 88aa20c67924
Revises: 
Create Date: 2024-08-21 23:14:31.331576

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

from sqlalchemy.orm import Session
from users.models import UserOrm
from users.auth import get_password_hash


# revision identifiers, used by Alembic.
revision: str = '88aa20c67924'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('name', sa.String(), nullable=False),
            sa.Column('description', sa.String(), nullable=True),
            sa.Column('is_active', sa.Boolean(), server_default='true', nullable=False),
            sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('email', sa.String(), nullable=False),
            sa.Column('password', sa.String(), nullable=False),
            sa.Column('name', sa.String(), nullable=True),
            sa.Column('surname', sa.String(), nullable=True),
            sa.Column('who_are_you', sa.Enum('employee', 'employer', name='role'), nullable=True),
            sa.Column('photo', sa.String(), nullable=True),
            sa.Column('created_at', sa.Date(), server_default=sa.text('CURRENT_DATE'), nullable=False),
            sa.Column('last_login', sa.DateTime(), nullable=True),
            sa.Column('is_super', sa.Boolean(), server_default='false', nullable=False),
            sa.Column('is_active', sa.Boolean(), server_default='true', nullable=False),
            sa.PrimaryKeyConstraint('id'),
            sa.UniqueConstraint('email')
    )
    op.create_table('projects',
    sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('user_id', sa.Integer(), nullable=False),
            sa.Column('cat_id', sa.Integer(), nullable=False),
            sa.Column('title', sa.String(), nullable=False),
            sa.Column('text', sa.String(), nullable=False),
            sa.Column('photos', sa.JSON(), nullable=True),
            sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
            sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
            sa.Column('is_active', sa.Boolean(), server_default='true', nullable=False),
            sa.ForeignKeyConstraint(['cat_id'], ['categories.id'], onupdate='RESTRICT', ondelete='RESTRICT'),
            sa.ForeignKeyConstraint(['user_id'], ['users.id'], onupdate='RESTRICT', ondelete='RESTRICT'),
            sa.PrimaryKeyConstraint('id')
    )

    bind = op.get_bind()
    session = Session(bind=bind)

    # Створення адміністратора
    admin_pass = "admin_password"
    admin_user = UserOrm(
        email="admin@i.ua",
        password=get_password_hash(admin_pass),
        is_super=True,
    )
    session.add(admin_user)
    session.commit()
    print("*" * 60)
    print(f"Create superuser, email: {admin_user.email}, password: {admin_pass}")
    print("Please log in as an superuser and change your password")
    print("*" * 60)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('projects')
    op.drop_table('users')
    op.drop_table('categories')
    op.execute('DROP TYPE role')
    # ### end Alembic commands ###
